apiVersion: apps/v1
kind: Deployment
metadata:
  name: ediaggregator
  labels:
    app: ediaggregator  
spec:
  replicas: replace_replicas
  selector:
    matchLabels:
      app: ediaggregator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ediaggregator        
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ediaggregator
              topologyKey: "kubernetes.io/hostname"
      containers:
      - image: image_to_be_deployed # image path
        imagePullPolicy: Always
        name: ediaggregator
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                apt-get update -y && apt-get install -y gnupg lsb-release wget procps && \
                lsb_release -c -s > /tmp/lsb_release && GCSFUSE_REPO=$(cat /tmp/lsb_release); echo "deb http://packages.cloud.google.com/apt gcsfuse-$GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list && wget -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
                apt-get update -y && apt-get install -y gcsfuse && \
                mkdir -p /edi-grouped-files && gcsfuse --only-dir edi/AS2/outbox ${EDI_SERVER} /edi-grouped-files
          preStop:
            exec:
              command:
              - fusermount
              - -u
              - /edi-grouped-files
        ports:
        - containerPort: 9311
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 9311
          initialDelaySeconds: 120
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 9311
          initialDelaySeconds: 60
          periodSeconds: 5
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
          limits:
            memory: "2Gi"
            cpu: "2"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: ENV_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: replace_logical_env.host.name
          - name: EDI_SERVER
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: replace_logical_env.edi.server.value
          - name: JAEGER_COLLECTOR_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: jaeger.collector.url
          - name: BOOTSTRAP_SERVER_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: replace_logical_env.kafka.bootstrap.server.url
          - name: KAFKA_SECURITY_PROTOCOL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: kafka.security.protocol
          - name : SSL_TRUSTSTORE_LOCATION
            value: /etc/certs/kafka/kafka.broker.keystore.jks          
          - name : SSL_TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kafka.broker.certs
                key: keystore.pwd
          - name: KAFKA_TOPIC_INBOUND
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: replace_logical_env.kafka.topic.inbound        
          - name: APIGATEWAYANALYTICS_KAFKA_TOPIC
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: replace_logical_env.kafka.analytic.topic        
          
          - name: EDICOREDATA_UPDATEEDIDOCPROCESSEDFLAG_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: ediaggregator.updateEDIDocProcessedFlagUrl
          - name: EDICOREDATA_GETEDIDOCSBYID_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: ediaggregator.getEDIDocsByIdUrl
          - name: EDICONFIG_GETSEQNCE_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: ediaggregator.getEdiConfigSeqnceUrl
          - name: EDICONFIG_GETCONFIGBYCUSTOMER_URL
            valueFrom:
              configMapKeyRef:
                name: ediaggregator-configmap
                key: ediaggregator.getEdiConfigByCustomerUrl
        volumeMounts:
          - mountPath: /etc/certs/kafka
            name: certs
            readOnly: true

      volumes:
        - name: certs
          secret:
            secretName: kafka.broker.certs
          
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: ediaggregator
  labels:
    app: ediaggregator
    k8s-app: ediaggregator
spec:
  selector:
    app: ediaggregator
  type: ClusterIP
  ports:
  - port: 9311
    name: web
    targetPort: 9311
---
apiVersion: autoscaling/v2 
kind: HorizontalPodAutoscaler 
metadata: 
  name: ediaggregator
spec: 
  maxReplicas: replace_maxReplicas
  minReplicas: replace_minReplicas
  scaleTargetRef: 
    apiVersion: apps/v1 
    kind: Deployment 
    name: ediaggregator
  metrics: 
  - type: Resource 
    resource: 
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70